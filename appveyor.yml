# See http://www.appveyor.com/docs/appveyor-yml for many more options

environment:
  LFMApiKey:
    secure: 3hqS76v5ydp1RAfqHveKisX1Cs/xFFOISouteoSO69wUuHVrSrqmi3IPpP/NFQmh
  LFMSessionKey:
    secure: gMAfmqAx9wTyeT5qEDB4zW5N6+GexurGriIaWoupOww1aFZGaDJNxUfbznCpA6PD
  LFMSharedSecret:
    secure: LA1YzNyJRI0WpbZ+HAWU9uXyalNMw3y24+9FHoFeFIHWXX8tm52CBfi/nz84wYke
  NuGetApiKey:
    secure: XFJ8cN2cPIpThLPwSbaTdgsKzVoyg9bbJpafpyxvFcoDNTrKHQ4B4MlfILzZC149
  IGNORE_NORMALISATION_GIT_HEAD_MOVE: 1

# Allow WMF5 (i.e. PowerShellGallery functionality)
image: Visual Studio 2019

branches:
  only:
    - main
    - master

# Skip on updates to the readme.
# We can force this by adding [skip ci] or [ci skip] anywhere in commit message
skip_commits:
  message: /updated readme.*|update readme.*s/

build: false

init:
  - ps: Set-TimeZone -Id 'W. Europe Standard Time' -PassThru

install:
  - ps: Install-Module PSDepend
  - ps: Invoke-PSDepend -Path .\PowerLFM.depend.psd1 -Force

build_script:
  - ps: .\build.ps1 -Task Build

test_script:
  - ps: .\build.ps1 -Task Test

on_success:
  - ps: |
      $tagVersion = (git describe --tags --abbrev=0 2>$null) -replace '^v' -as [Version]

      $shouldPublish = $env:APPVEYOR_REPO_BRANCH -in 'master', 'main' -and
          $tagVersion -and
          -not $env:APPVEYOR_PULL_REQUEST_NUMBER

      if ($shouldPublish) {
          $moduleManifestPath = Get-Item -Path "$env:APPVEYOR_BUILD_FOLDER\build\*\*\*.psd1" |
              Where-Object { $_.BaseName -eq $_.Directory.Parent.Name }
          $moduleManifest = Import-PowerShellDataFile -Path $moduleManifestPath.FullName
          $buildVersion = $moduleManifest['ModuleVersion'] -as [Version]

          if ($tagVersion -eq $buildVersion) {
              $galleryModule = Find-Module $moduleManifestPath.BaseName -ErrorAction SilentlyContinue

              if (-not $galleryModule -or $buildVersion -gt $galleryModule.Version) {
                  .\build.ps1 -Task Publish
              } else {
                  Write-Host ('Skipping publish: {0} is already published' -f $buildVersion) -ForegroundColor Green
              }
          } else {
              Write-Host ('Skipping publish: Tag {0} does not match build version {1}' -f $tagVersion, $buildVersion)
          }
      }
